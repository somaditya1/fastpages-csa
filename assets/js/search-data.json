{
  
    
        "post0": {
            "title": "Fibinochi",
            "content": "Starter Code . import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); // System.out.println(&quot;fibonacci List = &quot; + this.list); // System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { Fibo fib = new Fibo(); fib.print(); } } Fibo.main(null); . Init method = Stream fibonacci Number 20 = 4181 fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . Extending: For Loop . public class FiboFor extends Fibo { protected void init() { this.name = &quot;For&quot;; long limit = this.size; // for loops are likely the most common iteration structure, all the looping facts are in one line for (long[] f = new long[]{0, 1}; limit-- &gt; 0; f = new long[]{f[1], f[0] + f[1]}) this.setData(f[0]); } static public void main(String[] args) { FiboFor fib = new FiboFor(); fib.print(); } } FiboFor.main(null); . Init method = For fibonacci Number 20 = 4181 fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . Extending: Recursive Loop . public class FiboRecursive extends Fibo{ public void recursion(long limit, long[] f) { if (limit == 0) return; this.setData(f[0]); recursion(--limit, new long[]{f[1], f[0] + f[1]}); } protected void init() { this.name = &quot;Recursion&quot;; long limit = this.size; long[] f = new long[]{0, 1}; recursion(limit,f); } static public void main(String[] args) { FiboRecursive fib = new FiboRecursive(); fib.print(); } } FiboRecursive.main(null); . Init method = Recursion fibonacci Number 20 = 4181 fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . Extending: While Loop . public class FiboWhile extends Fibo { protected void init() { this.name = &quot;While&quot;; long limit = this.size; long[] f = new long[]{0, 1}; while (limit-- &gt; 0) { this.setData(f[0]); f = new long[]{f[1], f[0] + f[1]}; } } static public void main(String[] args) { FiboWhile fib = new FiboWhile(); fib.print(); } } FiboWhile.main(null); . Init method = While fibonacci Number 20 = 4181 fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . College Board Skills -Skill 1.B:Determine code that would be used to complete code segments (ie For, While, Recursion): See table of contents for each code segment with different types of loops -Skill 4.C: Determine if two or more code segments yield equivalent results (be sure to Discuss how you know results are the same) From the outputs, we can see that each code segment yields the same result. We can also make sure that the correct type of loop is running because of the print statements that show which function is being run, since each has a unique name associ -Skill 5.A: Describe the behavior of a given segment of program code (describe the difference in recursion versus for &amp; while loops, perhaps add timing to determine speed) The recursion code segment iterates by running the function called &quot;recursion&quot;, which called the setdata method, and then re-runs itself by calling itself, and reducing limit by 1 each time, until limit = 0. The while loop does the same as the recursive loop, but instead of calling itself over and over again, the loop is built into the &quot;while&quot; statement, which loops while (limit-- &gt; 0), which reduces limit each time by 1. .",
            "url": "https://somaditya1.github.io/fastpages-csa/jupyter/java/2022/09/25/week-fibinochi.html",
            "relUrl": "/jupyter/java/2022/09/25/week-fibinochi.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Java and HTML",
            "content": "console.log(&quot;Welcome to Soma&#39;s Javascript&quot;); function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } // define a function to hold data for a Person function Person(name, grade, role) { this.name = name; this.grade = grade; this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, grade: this.grade, role: this.role}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;NA&quot;, &quot;Teacher&quot;); // object type is easy to work with in JavaScript // define a student Array of Person(s) var students = [ new Person(&quot;Adi&quot;, &quot;Junior&quot;, &quot;Student&quot;), new Person(&quot;Aadit&quot;, &quot;Junior&quot;, &quot;Student&quot;), new Person(&quot;Soma&quot;, &quot;Junior&quot;, &quot;Student&quot;), new Person(&quot;Tian-Bin&quot;, &quot;Senior&quot;, &quot;Student&quot;), ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students scrumTeam = new Classroom(teacher, students); // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Grade&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of scrumTeam.classroom for (var row in scrumTeam.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + scrumTeam.classroom[row].name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + scrumTeam.classroom[row].grade + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + scrumTeam.classroom[row].role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(scrumTeam._toHtml()); . Failed to start the Kernel. module.js:597 return process.dlopen(module, path._makeLong(filename)); ^ Error: /home/somad/anaconda3/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.29&#39; not found (required by /home/somad/anaconda3/lib/node_modules/ijavascript/node_modules/zeromq/build/Release/zmq.node) at Error (native) at Object.Module._extensions..node (module.js:597:18) at Module.load (module.js:487:32) at tryModuleLoad (module.js:446:12) at Function.Module._load (module.js:438:3) at Module.require (module.js:497:17) at require (internal/module.js:20:19) at load (/home/somad/anaconda3/lib/node_modules/ijavascript/node_modules/node-gyp-build/index.js:22:10) at Object.&lt;anonymous&gt; (/home/somad/anaconda3/lib/node_modules/ijavascript/node_modules/zeromq/binding.js:1:105) at Module._compile (module.js:570:32). View Jupyter &lt;a href=&#39;command:jupyter.viewOutput&#39;&gt;log&lt;/a&gt; for further details. .",
            "url": "https://somaditya1.github.io/fastpages-csa/jupyter/java/2022/09/25/javah-iteration.html",
            "relUrl": "/jupyter/java/2022/09/25/javah-iteration.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Iteration",
            "content": "import java.util.concurrent.ThreadLocalRandom; class carLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] cars; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of cars */ public carLoop() { //Storing Data in 2D arrays cars = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //car 0 { &quot; ______&quot;, &quot; /|_||_ `.__&quot;, &quot;( _ _ _ &quot;, &quot;=`-(_)--(_)-&#39; &quot; }, //car 1 { &quot; ____&quot;, &quot; __/ |_ _&quot;, &quot;| _ _``-.&quot;, &quot;&#39;-(_)(_)--&#39;&quot; }, //car 2 { &quot; _.-.___ __&quot;, &quot;| _ _`-. &quot;, &quot;&#39;-(_)-(_)--`&quot; }, //car 3 { &quot; ____&quot;, &quot; ____//_]|________&quot;, &quot; (o _ | -| _ o| &quot;, &quot; `(_)-(_)--&#39;&quot; }, //car 4 { &quot; _____________&quot;, &quot; ____//__][__][___|&quot;, &quot;(o _| -| _ o|&quot;, &quot; `-(_)--(_)-&#39;&quot; }, }; } /** * Loop and print cars in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Car race poem&quot;); // cars (non-primitive) defined in constructor knows its length int carCount = cars.length; int i = carCount; while (i&gt;=1) //loops through 2D array length backwards { //this print statement shows current count of cars // concatenation (+) of the loop variable and string to form a countdown message System.out.println(i + &quot; Cars left in the race&quot;); for (int row = 0; row &lt; i; row++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each car part by part, will eventually print entire column*/ for (int col = 0; col &lt; cars[row].length; col++) { // prints specific part of the car from the column System.out.print(cars[row][col] + &quot; &quot;); //this is new line between separate parts System.out.println(); } //this new line gives separation between stanza of poem System.out.println(); } //countdown for poem, decrementing carCount variable by 1 int randomNum = ThreadLocalRandom.current().nextInt(1, carCount); carCount -= 1; i -= randomNum; } //out of all the loops, prints finishing messages System.out.println(&quot;WINNER&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new carLoop().printPoem(); //a new car list and output in one step } } carLoop.main(null); . Car race poem 5 Cars left in the race ______ /|_||_ `.__ ( _ _ _ =`-(_)--(_)-&#39; ____ __/ |_ _ | _ _``-. &#39;-(_)(_)--&#39; _.-.___ __ | _ _`-. &#39;-(_)-(_)--` ____ ____//_]|________ (o _ | -| _ o| `(_)-(_)--&#39; _____________ ____//__][__][___| (o _| -| _ o| `-(_)--(_)-&#39; 2 Cars left in the race ______ /|_||_ `.__ ( _ _ _ =`-(_)--(_)-&#39; ____ __/ |_ _ | _ _``-. &#39;-(_)(_)--&#39; WINNER 0000000000000000000000000000000000 THE END .",
            "url": "https://somaditya1.github.io/fastpages-csa/jupyter/java/2022/09/20/first-java-iteration.html",
            "relUrl": "/jupyter/java/2022/09/20/first-java-iteration.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "FRQ",
            "content": "The APCalendar class contains methods used to calculate information about a calendar. You will write two methods of the class. . public class APCalendar { /** Returns true if year is a leap year and false otherwise */ private static boolean isLeapyear(int year) { /* implementation not shown */} /** Returns the number of leap years between year1 and year2, inclusive. * Precondition: 0 &lt;= year1 &lt;= year2 * */ public static int numberOfLeapYears(int year1, int year2) { /* to be implemented in part (a) */} /** Returns the value representing the day of the week for the first day of year, * where 0 denotes Sunday, 1 denotes Monday, ..., and 6 denotes Saturday. */ private static int firstDayOfYear(int year) { /* implementation not shown */ } /** Returns n, where month, day, and year specify the nth day of the year. * * Returns 1 for January 1 (month = 1, day = 1) of any year. * * Precondition: The date represented by month, day, year is a valid date. * */ private static int dayOfYear(int month, int day, int year) { /* implementation not shown */ } /** Returns the value representing the day of the week for the given date * (month, day, year), where 0 denotes Sunday, 1 denotes Monday, ..., * and 6 denotes Saturday. * Precondition: The date represented by month, day, year is a valid date. * * */ public static int dayOfWeek(int month, int day, int year) { /* to be implemented in part (b) */} // there may be instance variables, constructors, and other methods not shown. } . Write the static method numberOfLeapYears, which returns the number of leap years between year1 and year2, inclusive. . /** Returns the number of leap years between year1 and year2, inclusive. * Precondition: 0 &lt;= year1 &lt;= year2 * */ public static int numberOfLeapYears(int year1, int year2) { int leapYearCount = 0; // variable to keep track of amount of leap years // for loop: set year to year1, and while it is not yet at year2, find out if leapyear or not for(int year = year1; year &lt;= year2; year++) { // check the year for if it is leap year if(isLeapYear(year)) { leapYearCount++; // increase count } } return leapYearCount; // return the integer for the count of leap years } . The approach I took was to make a loop to go through all the years between the two years, and check if it was a leap year. If it was, it would add one to the count of the leap year. As seen above, this is that pseudocode written in actual java. Comparing to the solution code, it is almost identitcal (with the variable names as the exception). . (b) dayOfWeek . Write the static method dayOfWeek, which returns the integer value representing the day of the week for the given date (month, day, year), where 0 denotes Sunday, 1 denotes Monday, ..., and 6 denotes Saturday. For example, 2019 began on a Tuesday, and January 5 is the fifth day of 2019. As a result, January 5, 2019, fell on a Saturday, and the method call dayOfWeek(1, 5, 2019) returns 6. . /** Returns the value representing the day of the week for the given date * (month, day, year), where 0 denotes Sunday, 1 denotes Monday, ..., * and 6 denotes Saturday. * Precondition: The date represented by month, day, year is a valid date. * * */ public static int dayOfWeek(int month, int day, int year) { firstDay = firstDayOfYear(year); // store the day of the week of the first day dayAfterNew = dayOfYear(month, day, year); // store the number of days since new year (inclusive) return (firstDay + dayAfterNew - 1) % 7; // adds the day of the week to the days since new year, but minus 1 because the dayAfterNew includes the first day. then, mod 7 } . I set variables for the firstDay day of the week, and the days after the new year as dayAfterNew. Then, I returned the value of them added minus 1 to get some number, and modulus 7 to take the modulus (remainder). The remainder would be the day of the week, which is what is returned.Comparing to the answer, I see that the solution has the return value stored within another variable, so it is almost identitical. .",
            "url": "https://somaditya1.github.io/fastpages-csa/jupyter/java/2022/09/20/first-java-frq.html",
            "relUrl": "/jupyter/java/2022/09/20/first-java-frq.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Title",
            "content": "Java Lesson . If Statements If statements evaluate the conditional given, and if true, execute the code block inside the statement. . import java.util.Scanner; Scanner scanner = new Scanner(System.in); double x; double y; System.out.print(&quot;Enter a number: &quot;); x = scanner.nextDouble(); System.out.println(x); System.out.print(&quot;Enter another number: &quot;); y = scanner.nextDouble(); System.out.println(y); // Modulo function returns remainder of x and y // checks if remainder of x and y is 0 (meaning it is divisible) if (x % y == 0) { System.out.println(x + &quot; is divisible by &quot; + y); } . Enter a number: 2.0 Enter another number: 4.0 . If-Else Statements If statements contain code to be run if a given conditional is true. Else statements contain code to be run if that conditional is proven false. . import java.util.Scanner; Scanner scanner = new Scanner(System.in); double x; double y; System.out.print(&quot;Enter a number: &quot;); x = scanner.nextDouble(); System.out.println(x); System.out.print(&quot;Enter another number: &quot;); y = scanner.nextDouble(); System.out.println(y); // Modulo function returns remainder of x and y // checks if remainder of x and y is 0 (meaning it is divisible) if (x % y == 0) { System.out.println(x + &quot; is divisible by &quot; + y); } else { // the code below runs if the remainder of x and y is NOT 0 System.out.println(x + &quot; is NOT divisible by &quot; + y); } . Enter a number: 2.0 Enter another number: 4.0 2.0 is NOT divisible by 4.0 . If-elseif-else Elseif blocks come between if and else statements. Elseif statements function similar to if statements in that they contain code that is run if a given conditional is true. However, elseif statements only run if the prior if or elseif block is false. Otherwise, they are passed over. . import java.util.Scanner; Scanner scanner = new Scanner(System.in); double x; double y; System.out.print(&quot;Enter a number: &quot;); x = scanner.nextDouble(); System.out.println(x); System.out.print(&quot;Enter another number: &quot;); y = scanner.nextDouble(); System.out.println(y); if (x &gt; y) { // checks if x is greater than y System.out.println(x + &quot; is greater than &quot; + y); } else if (x == y) { // if x isnt greater than y, check if theyre equal System.out.println(x + &quot; is equal to &quot; + y); } else { // only option is x being less than y System.out.println(x + &quot; is less than &quot; + y); } . Enter a number: 4.0 Enter another number: 6.0 4.0 is less than 6.0 . Multiple elseifs . import java.util.Scanner; Scanner scanner = new Scanner(System.in); double x; double y; System.out.print(&quot;First number: &quot;); x = scanner.nextDouble(); System.out.println(x); System.out.print(&quot;Enter the operation (+,-,*,/): &quot;); char operator = scanner.next().charAt(0); System.out.println(operator); System.out.print(&quot;second number: &quot;); y = scanner.nextDouble(); System.out.println(y); if (operator == &#39;+&#39;) { System.out.println(x + y); } else if (operator == &#39;-&#39;) { System.out.println(x - y); } else if (operator == &#39;*&#39;) { System.out.println(x * y); } else if (operator == &#39;/&#39;) { System.out.println(x / y); } else { System.out.println(&quot;Invalid operator&quot;); } . First number: 5.0 Enter the operation (+,-,*,/): + second number: 5.0 10.0 . double num1, num2; Scanner scanner = new Scanner(System.in); System.out.print(&quot;Enter a color (r,g,b,y): &quot;); char color = scanner.next().charAt(0); System.out.println(color); Scanner newScanner = new Scanner(System.in); System.out.println(&quot;type a message&quot;); String message = newScanner.nextLine(); String output = &quot;&quot;; switch (color) { case &#39;r&#39;: output = &quot; u001B[31m&quot;; break; case &#39;g&#39;: output = &quot; u001B[32m&quot;; break; case &#39;b&#39;: output = &quot; u001B[34m&quot;; break; case &#39;y&#39;: output = &quot; u001B[33m&quot;; break; default: System.out.println(&quot;invalid color&quot;); break; } System.out.println(&quot;The final result: &quot;); System.out.println(output + message); . Enter a color (r,g,b,y): r type a message The final result: hello . De Morgan&#39;s Law Augstus De Morgan developed DeMorgan&#39;s laws in the 1800s. DeMorgan&#39;s law explains complex conditional negation. A complex conditional is multiple conditional statements joined by a logical operator. . not (a and b) is the same as (not a) or (not b). In Java this is written as !(a &amp;&amp; b) == !a || !b . not (a or b) is the same as (not a) and (not b). In Java this is written as !(a || b) == !a &amp;&amp; !b . Negation modifies each conditional. . public class DeMorgansAndTest { public static void main(String[] args) { int x = 15; int y = 164; System.out.println(!(x&lt;20 &amp;&amp; y &gt; 100)); // prints true if x is not less than 20 or if y is not greater than 100 // prints false if none of these are true // this output should be false since x is less than 20 and y is greater than 100 } } DeMorgansAndTest.main(null) . false . public class DeMorgansOrTest { public static void main(String[] args) { int x = 124; int y = 9; System.out.println(!(x &gt; 200 || y &lt; 2)); // prints true if x is not &gt; 200 AND y is not &lt; 2 // prints false otherwise // this output should be true as x is NOT greater than 200 and y is NOT less than 2 } } DeMorgansOrTest.main(null) . true . Short and Long Term Goals . Bench 225 by end of the school year hopefully Learn more in areas of interest such as CS, Math, Physics and Investments Get good grades in school Continue working hard at work Help others Develop better work ethic Develop better focus and study habits Stay happy mindset . Psychology and the Good Life Notes . College isn’t just like admissions packet Students feel unfulfilled and stressed Anxiety is prevelant but grit is inpenatrable Stress takes a toll if you allow it to College students have more than the average amount of stress Stress affects future workers negatailvly College students have a high amount of loneliness because of work .",
            "url": "https://somaditya1.github.io/fastpages-csa/2022/09/11/iflesson.html",
            "relUrl": "/2022/09/11/iflesson.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Title",
            "content": ". toc: true . k 2 - Primitives . { &quot;cells&quot;: [ { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;id&quot;: &quot;82fde87d&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;# Java Conditionals Notebook&quot; ] }, { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;id&quot;: &quot;183347da&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;### If Statements n&quot;, &quot;If statements evaluate the conditional given, and if true, execute the code block inside the statement. &quot; ] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: 2, &quot;id&quot;: &quot;8ca309ca&quot;, &quot;metadata&quot;: { &quot;vscode&quot;: { &quot;languageId&quot;: &quot;java&quot; } }, &quot;outputs&quot;: [ { &quot;name&quot;: &quot;stdout&quot;, &quot;output_type&quot;: &quot;stream&quot;, &quot;text&quot;: [ &quot;Enter a number: 10.0 n&quot;, &quot;Enter another number: 5.0 n&quot;, &quot;10.0 is divisible by 5.0 n&quot; ] } ], &quot;source&quot;: [ &quot;import java.util.Scanner; n&quot;, &quot;Scanner scanner = new Scanner(System.in); n&quot;, &quot; n&quot;, &quot;double x; n&quot;, &quot;double y; n&quot;, &quot; n&quot;, &quot;System.out.print( &quot;Enter a number: &quot;); n&quot;, &quot; n&quot;, &quot;x = scanner.nextDouble(); n&quot;, &quot; n&quot;, &quot;System.out.println(x); n&quot;, &quot; n&quot;, &quot;System.out.print( &quot;Enter another number: &quot;); n&quot;, &quot; n&quot;, &quot;y = scanner.nextDouble(); n&quot;, &quot; n&quot;, &quot;System.out.println(y); n&quot;, &quot; n&quot;, &quot;// Modulo function returns remainder of x and y n&quot;, &quot;// checks if remainder of x and y is 0 (meaning it is divisible) n&quot;, &quot;if (x % y == 0) { n&quot;, &quot; System.out.println(x + &quot; is divisible by &quot; + y); n&quot;, &quot;} n&quot; ] }, { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;id&quot;: &quot;0cf5f7dc&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;### If-Else Statements n&quot;, &quot;If statements contain code to be run if a given conditional is true. Else statements contain code to be run if that conditional is proven false. &quot; ] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: 7, &quot;id&quot;: &quot;50f08c05&quot;, &quot;metadata&quot;: { &quot;vscode&quot;: { &quot;languageId&quot;: &quot;java&quot; } }, &quot;outputs&quot;: [ { &quot;name&quot;: &quot;stdout&quot;, &quot;output_type&quot;: &quot;stream&quot;, &quot;text&quot;: [ &quot;Enter a number: 20.0 n&quot;, &quot;Enter another number: 7.0 n&quot;, &quot;20.0 is NOT divisible by 7.0 n&quot; ] } ], &quot;source&quot;: [ &quot;import java.util.Scanner; n&quot;, &quot;Scanner scanner = new Scanner(System.in); n&quot;, &quot; n&quot;, &quot;double x; n&quot;, &quot;double y; n&quot;, &quot; n&quot;, &quot;System.out.print( &quot;Enter a number: &quot;); n&quot;, &quot; n&quot;, &quot;x = scanner.nextDouble(); n&quot;, &quot; n&quot;, &quot;System.out.println(x); n&quot;, &quot; n&quot;, &quot;System.out.print( &quot;Enter another number: &quot;); n&quot;, &quot; n&quot;, &quot;y = scanner.nextDouble(); n&quot;, &quot; n&quot;, &quot;System.out.println(y); n&quot;, &quot; n&quot;, &quot;// Modulo function returns remainder of x and y n&quot;, &quot;// checks if remainder of x and y is 0 (meaning it is divisible) n&quot;, &quot;if (x % y == 0) { n&quot;, &quot; System.out.println(x + &quot; is divisible by &quot; + y); n&quot;, &quot;} else { // the code below runs if the remainder of x and y is NOT 0 n&quot;, &quot; System.out.println(x + &quot; is NOT divisible by &quot; + y); n&quot;, &quot;}&quot; ] }, { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;id&quot;: &quot;03d6ca18&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;### If-elseif-else n&quot;, &quot;Elseif blocks come between if and else statements. Elseif statements function similar to if statements in that they contain code that is run if a given conditional is true. However, elseif statements only run if the prior if or elseif block is false. Otherwise, they are passed over. n&quot; ] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: null, &quot;id&quot;: &quot;7336fc94&quot;, &quot;metadata&quot;: { &quot;vscode&quot;: { &quot;languageId&quot;: &quot;java&quot; } }, &quot;outputs&quot;: [], &quot;source&quot;: [ &quot;import java.util.Scanner; n&quot;, &quot;Scanner scanner = new Scanner(System.in); n&quot;, &quot; n&quot;, &quot;double x; n&quot;, &quot;double y; n&quot;, &quot; n&quot;, &quot;System.out.print( &quot;Enter a number: &quot;); n&quot;, &quot; n&quot;, &quot;x = scanner.nextDouble(); n&quot;, &quot; n&quot;, &quot;System.out.println(x); n&quot;, &quot; n&quot;, &quot;System.out.print( &quot;Enter another number: &quot;); n&quot;, &quot; n&quot;, &quot;y = scanner.nextDouble(); n&quot;, &quot; n&quot;, &quot;System.out.println(y); n&quot;, &quot; n&quot;, &quot;if (x &gt; y) { // checks if x is greater than y n&quot;, &quot; System.out.println(x + &quot; is greater than &quot; + y); n&quot;, &quot;} else if (x == y) { // if x isnt greater than y, check if theyre equal n&quot;, &quot; System.out.println(x + &quot; is equal to &quot; + y); n&quot;, &quot;} else { // only option is x being less than y n&quot;, &quot; System.out.println(x + &quot; is less than &quot; + y); n&quot;, &quot;}&quot; ] }, { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;id&quot;: &quot;bc157bd3&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;### Multiple elseifs&quot; ] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: 8, &quot;id&quot;: &quot;4217f472&quot;, &quot;metadata&quot;: { &quot;vscode&quot;: { &quot;languageId&quot;: &quot;java&quot; } }, &quot;outputs&quot;: [ { &quot;name&quot;: &quot;stdout&quot;, &quot;output_type&quot;: &quot;stream&quot;, &quot;text&quot;: [ &quot;First number: 7.0 n&quot;, &quot;Enter the operation (+,-,,/): 9 n&quot;, &quot;second number: 9.0 n&quot;, &quot;Invalid operator n&quot; ] } ], &quot;source&quot;: [ &quot;import java.util.Scanner; n&quot;, &quot;Scanner scanner = new Scanner(System.in); n&quot;, &quot; n&quot;, &quot;double x; n&quot;, &quot;double y; n&quot;, &quot; n&quot;, &quot;System.out.print( &quot;First number: &quot;); n&quot;, &quot; n&quot;, &quot;x = scanner.nextDouble(); n&quot;, &quot; n&quot;, &quot;System.out.println(x); n&quot;, &quot; n&quot;, &quot;System.out.print( &quot;Enter the operation (+,-,,/): &quot;); n&quot;, &quot; n&quot;, &quot;char operator = scanner.next().charAt(0); n&quot;, &quot; n&quot;, &quot;System.out.println(operator); n&quot;, &quot; n&quot;, &quot;System.out.print( &quot;second number: &quot;); n&quot;, &quot; n&quot;, &quot;y = scanner.nextDouble(); n&quot;, &quot; n&quot;, &quot;System.out.println(y); n&quot;, &quot; n&quot;, &quot;if (operator == &#39;+&#39;) { n&quot;, &quot; System.out.println(x + y); n&quot;, &quot;} else if (operator == &#39;-&#39;) { n&quot;, &quot; System.out.println(x - y); n&quot;, &quot;} else if (operator == &#39;&#39;) { n&quot;, &quot; System.out.println(x y); n&quot;, &quot;} else if (operator == &#39;/&#39;) { n&quot;, &quot; System.out.println(x / y); n&quot;, &quot;} else { n&quot;, &quot; System.out.println( &quot;Invalid operator &quot;); n&quot;, &quot;} n&quot; ] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: null, &quot;id&quot;: &quot;d9f98d4b&quot;, &quot;metadata&quot;: { &quot;vscode&quot;: { &quot;languageId&quot;: &quot;java&quot; } }, &quot;outputs&quot;: [], &quot;source&quot;: [] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: 8, &quot;id&quot;: &quot;0668f714&quot;, &quot;metadata&quot;: { &quot;vscode&quot;: { &quot;languageId&quot;: &quot;java&quot; } }, &quot;outputs&quot;: [ { &quot;name&quot;: &quot;stdout&quot;, &quot;output_type&quot;: &quot;stream&quot;, &quot;text&quot;: [ &quot;Enter a color (r,g,b,y): g n&quot;, &quot;type a message n&quot;, &quot;The final result: n&quot;, &quot; u001b[32mfadfadf n&quot; ] } ], &quot;source&quot;: [ &quot;double num1, num2; n&quot;, &quot; n&quot;, &quot;Scanner scanner = new Scanner(System.in); n&quot;, &quot; n&quot;, &quot;System.out.print( &quot;Enter a color (r,g,b,y): &quot;); n&quot;, &quot; n&quot;, &quot;char color = scanner.next().charAt(0); n&quot;, &quot; n&quot;, &quot;System.out.println(color); n&quot;, &quot; n&quot;, &quot;Scanner newScanner = new Scanner(System.in); n&quot;, &quot; n&quot;, &quot;System.out.println( &quot;type a message &quot;); n&quot;, &quot;String message = newScanner.nextLine(); n&quot;, &quot; n&quot;, &quot; n&quot;, &quot;String output = &quot; &quot;; n&quot;, &quot; n&quot;, &quot;switch (color) { n&quot;, &quot; n&quot;, &quot;case &#39;r&#39;: n&quot;, &quot; n&quot;, &quot; output = &quot; u001B[31m &quot;; n&quot;, &quot; n&quot;, &quot; break; n&quot;, &quot; n&quot;, &quot;case &#39;g&#39;: n&quot;, &quot; n&quot;, &quot; output = &quot; u001B[32m &quot;; n&quot;, &quot; n&quot;, &quot; break; n&quot;, &quot; n&quot;, &quot;case &#39;b&#39;: n&quot;, &quot; n&quot;, &quot; output = &quot; u001B[34m &quot;; n&quot;, &quot; n&quot;, &quot; break; n&quot;, &quot;case &#39;y&#39;: n&quot;, &quot; n&quot;, &quot; output = &quot; u001B[33m &quot;; n&quot;, &quot; n&quot;, &quot; break; n&quot;, &quot; n&quot;, &quot;default: n&quot;, &quot; n&quot;, &quot; System.out.println( &quot;invalid color &quot;); n&quot;, &quot; n&quot;, &quot; break; n&quot;, &quot;} n&quot;, &quot; n&quot;, &quot;System.out.println( &quot;The final result: &quot;); n&quot;, &quot; n&quot;, &quot;System.out.println(output + message); n&quot; ] }, { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;id&quot;: &quot;b5b47173&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;### De Morgan&#39;s Law n&quot;, &quot;Augstus De Morgan developed DeMorgan&#39;s laws in the 1800s. DeMorgan&#39;s law explains complex conditional negation. A complex conditional is multiple conditional statements joined by a logical operator. n&quot;, &quot; n&quot;, &quot;not (a and b) is the same as (not a) or (not b). In Java this is written as !(a &amp;&amp; b) == !a || !b n&quot;, &quot; n&quot;, &quot;not (a or b) is the same as (not a) and (not b). In Java this is written as !(a || b) == !a &amp;&amp; !b n&quot;, &quot; n&quot;, &quot;Negation modifies each conditional. &quot; ] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: 13, &quot;id&quot;: &quot;6bcf5530&quot;, &quot;metadata&quot;: { &quot;vscode&quot;: { &quot;languageId&quot;: &quot;java&quot; } }, &quot;outputs&quot;: [ { &quot;name&quot;: &quot;stdout&quot;, &quot;output_type&quot;: &quot;stream&quot;, &quot;text&quot;: [ &quot;false n&quot; ] } ], &quot;source&quot;: [ &quot;public class DeMorgansAndTest n&quot;, &quot;{ n&quot;, &quot; public static void main(String[] args) n&quot;, &quot; { n&quot;, &quot; int x = 15; n&quot;, &quot; int y = 164; n&quot;, &quot; System.out.println(!(x&lt;20 &amp;&amp; y &gt; 100)); n&quot;, &quot; // prints true if x is not less than 20 or if y is not greater than 100 n&quot;, &quot; // prints false if none of these are true n&quot;, &quot; // this output should be false since x is less than 20 and y is greater than 100 n&quot;, &quot; } n&quot;, &quot;} n&quot;, &quot; n&quot;, &quot;DeMorgansAndTest.main(null) n&quot; ] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: 14, &quot;id&quot;: &quot;e83681e8&quot;, &quot;metadata&quot;: { &quot;vscode&quot;: { &quot;languageId&quot;: &quot;java&quot; } }, &quot;outputs&quot;: [ { &quot;name&quot;: &quot;stdout&quot;, &quot;output_type&quot;: &quot;stream&quot;, &quot;text&quot;: [ &quot;true n&quot; ] } ], &quot;source&quot;: [ &quot;public class DeMorgansOrTest n&quot;, &quot;{ n&quot;, &quot; public static void main(String[] args) n&quot;, &quot; { n&quot;, &quot; int x = 124; n&quot;, &quot; int y = 9; n&quot;, &quot; System.out.println(!(x &gt; 200 || y &lt; 2)); n&quot;, &quot; // prints true if x is not &gt; 200 AND y is not &lt; 2 n&quot;, &quot; // prints false otherwise n&quot;, &quot; // this output should be true as x is NOT greater than 200 and y is NOT less than 2 n&quot;, &quot; } n&quot;, &quot;} n&quot;, &quot;DeMorgansOrTest.main(null) n&quot; ] } ], &quot;metadata&quot;: { &quot;kernelspec&quot;: { &quot;display_name&quot;: &quot;Java&quot;, &quot;language&quot;: &quot;java&quot;, &quot;name&quot;: &quot;java&quot; }, &quot;language_info&quot;: { &quot;codemirror_mode&quot;: &quot;java&quot;, &quot;file_extension&quot;: &quot;.jshell&quot;, &quot;mimetype&quot;: &quot;text/x-java-source&quot;, &quot;name&quot;: &quot;Java&quot;, &quot;pygments_lexer&quot;: &quot;java&quot;, &quot;version&quot;: &quot;18.0.2+0&quot; } }, &quot;nbformat&quot;: 4, &quot;nbformat_minor&quot;: 5 } .",
            "url": "https://somaditya1.github.io/fastpages-csa/2022/09/05/ticket2.html",
            "relUrl": "/2022/09/05/ticket2.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Ec Reflection",
            "content": "At the event, I learned a ton about the challenges that come with pursuing computer science. I learned that most people have unique experiences, and that Mr.M’s class is a splendid introduction to the many ideas, and it helps build a solid foundation for the future. I learned about the experiences people go through in college with computer science and the many beneficial aspects the subject has. I learned about the many different unique applications for computer science in many different fields. This makes the major very versatile and has many different directions it can take as they develop. I also was surprised about the major difference between CS at our school and in college, as one of the alumni pointed out the experience in college also is very different in the sense the problems are unique and require a different way to think. I also know understand now that most internships are looking for hard work and problem-solving rather than someone who know all the syntax as that is not as important as problems become more difficult, so logic is the main benefactor of a person. I learned about the use of project base learning and the relevance it has in college and in the industry. I learned that people continue working in project form to develop their learning. Another part of college that is not in our PBL system is a fair amount of tests. I also learned about the different teacher relationship in college, by nature of the college classes professors do not care as much because they have 200 students per class making each student responsible for their own work. This makes a great opportunity in this class as I can get a good amount of attention to improve my coding skills. I was also reminded about the use of computer science in other fields and how it can increase an individual’s worth at a company or organization because it is a very valuable skill. Even in school subjects such as math, computer science can help a ton with understanding the applications for those topics. Working hard is a necessity in computer science as the subjects are not easy and require time, effort and passion. Reputation building is very important, as many professors can be assets in the future as references. .",
            "url": "https://somaditya1.github.io/fastpages-csa/2022/08/29/ec-reflection.html",
            "relUrl": "/2022/08/29/ec-reflection.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Python Notebook",
            "content": "import getpass, sys questions = 5 correct = 0 def question_and_answer(prompt, answer): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) if answer == msg: print(&quot;Correct Answer&quot;) global correct correct+=1 else: print (&quot;Incorrect Answer&quot;) question_and_answer(&quot;Who is the WR1 on the Buffulo Bills?&quot;, &quot;Stefon Diggs&quot;) question_and_answer(&quot;Who is the QB on the Bengals?&quot;, &quot;Joe Burrow&quot;) question_and_answer(&quot;What team does Sammy Watkins play for?&quot;, &quot;Green Bay Packers&quot;) question_and_answer(&quot;Who won the 2022 NFL Superbowl?&quot;, &quot;LA Rams&quot;) question_and_answer(&quot;Who is the G.O.A.T?&quot;, &quot;Tom Brady&quot;) question_and_answer(&quot;Who is the worst NFL team in 2022?&quot;, &quot;Jaxenville Jaguars&quot;) print(correct, &quot;Answers correct&quot;) . Question: Who is the WR1 on the Buffulo Bills? Answer: Stefon Diggs Correct Answer Question: Who is the QB on the Bengals? Answer: Joes Burrow Incorrect Answer Question: What team does Sammy Watkins play for? Answer: Green Bay Packers Correct Answer Question: Who won the 2022 NFL Superbowl? Answer: LA Rams Correct Answer Question: Who is the G.O.A.T? Answer: Tom Brady Correct Answer 4 Answers correct .",
            "url": "https://somaditya1.github.io/fastpages-csa/jupyter/python/2022/08/28/quizzes.html",
            "relUrl": "/jupyter/python/2022/08/28/quizzes.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Python Notebook",
            "content": "print (&quot;Hi&quot;) .",
            "url": "https://somaditya1.github.io/fastpages-csa/jupyter/python/2022/08/28/first-python.html",
            "relUrl": "/jupyter/python/2022/08/28/first-python.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Java Notebook",
            "content": "System.out.println(&quot;I love coding&quot;); . I love coding .",
            "url": "https://somaditya1.github.io/fastpages-csa/jupyter/java/2022/08/28/first-java.html",
            "relUrl": "/jupyter/java/2022/08/28/first-java.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Collegeboard Plan",
            "content": "",
            "url": "https://somaditya1.github.io/fastpages-csa/2022/08/28/collegeboard-plan.html",
            "relUrl": "/2022/08/28/collegeboard-plan.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Bash Installation Checks",
            "content": "conda activate python --version python2 --version java -version conda deactivate . (base) Python 3.9.12 (base) Python 2.7.18 (base) openjdk version &#34;11.0.16&#34; 2022-07-19 OpenJDK Runtime Environment (build 11.0.16+8-post-Ubuntu-0ubuntu122.04) OpenJDK 64-Bit Server VM (build 11.0.16+8-post-Ubuntu-0ubuntu122.04, mixed mode, sharing) (base) . conda activate conda list conda deactivate . (base) # packages in environment at /home/somad/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.8.0 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.14.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 (base) . conda activate echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi conda deactivate . (base) Conda Check (base) (base) (base) (base) (base) (base) jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 (base) . conda activate jupyter --version jupyter kernelspec list conda deactivate . (base) Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 (base) Available kernels: bash /home/somad/.local/share/jupyter/kernels/bash java /home/somad/.local/share/jupyter/kernels/java javascript /home/somad/.local/share/jupyter/kernels/javascript python3 /home/somad/anaconda3/share/jupyter/kernels/python3 (base) . conda activate test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi conda deactivate . (base) (base) (base) (base) (base) python3 /home/somad/anaconda3/share/jupyter/kernels/python3 (base) .",
            "url": "https://somaditya1.github.io/fastpages-csa/jupyter/bash/2022/08/28/bash-tests.html",
            "relUrl": "/jupyter/bash/2022/08/28/bash-tests.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Apel Vocab",
            "content": "Terms to know - Rhetorical Devices . Term Definition Example Typical Rhetorical Effect . Diction . High/Formal . Middle/Moderate . Low/Informal . (colloquial) . Abstract . Concrete . Monosyllabic . Polysyllabic . Connotation . | The particular choice of words chosen in order to depict at tone by the author . Formal words . Simple words . Informal word/slang . Word choice that cannot be visualized in the reader&#39;s head . Obvious/Clear-cut words . Word with only one syllable . Words with more than one syllables . Implicitly suggesting something with a certain word . | “That car is remarkably luxurious .” . That boy is shockingly perspicacious. . “Nice Job.” . “I hate this stuff” . “I aspire unlimited power.” . “I walked 3 meters” . “tree” . “Terrific” . “He just is not trying” . | Usage of words to convey a message of the authors . To establish ethos and formality . Relatable writing/easy to follow . For casual texts . To express more complex ideas and issues . To state an obvious or literal fact . Show simple ideas/concision . To expand word choice . Hidden meaning(being implicit) . | . Syntax . Simple . Compound . Complex . Compound - Complex . Declarative . Parallel Construction . | The method of how words are formed together for a uniform sentence . subject + verb form . Two independent clauses connected / Subject + Verb + Object + Conjunction + Subject + Verb + Object . 2 or more clauses in singular sentence/ Dependent clause + Subject + Verb + Noun + Object structure . Independent with two other dependent clauses . Informative statements . The use of similar words and concepts. . | “The boy ran past everyone” . “She died” . “He walked, but he had a scooter” . “Because I was losing, I ran on past the line of scrimmage”” . “They bought the toy, but it was free earlier because of a limited time discount.” . “The ground is cold.” . “He was smart, he was honest, and he was kind.” . | Effective method of conveying ideas . Effective method of conveying shorter ideas . Effective method of conveying ideas . Effective method of conveying ideas . Effective method of conveying longer ideas . To inform with knowledge or facts . Emphasis of certain concepts and clarity . | . Tone | Author&#39;s attitude towards a given subject . Connoting, powerful adjectives describe tone . Diction syntax and viewpoint make functional tone . | Sample tones: . “The people continue to not work” . Yo u wanna go to the park rn . | Create emotion and passion within the audience. | . The Appeals | Rhetorical: Ethos, Pathos and Logos | | Method to appeal to the masses | . Logos | A reasoning based on logic | “UCLA’s study concluded that sleep makes children grow 12%.” | To support an argument or statement logically in order to appeal to the audience. | . Ethos | Credibility associated with a certain author or organization to add stability. | “I am Mike Tyson and I can teach you how to box.” | To lend credibility to a certain argument with a person or an organization. | . Pathos | Usage of emotion to add stability and bring out the emotions of my audience. | Look at these starving children. How can you not support them? | Pulling emotion out of the audience. | . Rhetorical Situation . Exigence . Audience . Speaker . Occasion . Purpose and Message . | An attempt to change someone&#39;s perspective . Motivator for the author, reason for his or her work . People the author intends to communicate with and influence is some way. . The person with the argument/ stance . Reason for a character&#39;s deeds . Goal of the conveying a concept to the audience . | “He did not steal the chocolate bar; he has his own chocolate factory!” . “People have become too obese in our country.” . YouTube&#39;s targets younger teens as their primary consumer. . Abraham Lincoln advocated against slavery . I don&#39;t like alcohol; my dad was an alcoholic. . Stopping racism . | Author uses to change the audience&#39;s opinion . Helps understand reason for why someone would write . People who would be interested in the authors work . Communicate message to audience in a believable way that could lead them to agree . The situation/backs story of the scenario . Commonly seen in all writing to either inform or sway . | . Claim | The proposed idea by the author | “Stefon Diggs is the best wide receiver.” | Provide authors stance on a given topic | . Evidence | Used to lend ethos and credibility to a claim | “Your prints are on the gun” | Help support and idea | . Rhetorical and literary strategies | Words/Phrases used to depict a meaning | Example | To evoke a response from an audience or to persuade an audience. | . Allusion | A subtle reference, implied but never directly stated. | “A smart brain is basically an infinity stone.” | Used for relatability and some concept topics | . Rhetorical Questions | Specific questions that intend to sway the audience&#39;s opinion and introduce a stance | “Should I breathe air, or should I vape random chemicals made for less than 1o cents that taste like watermelon?” | To emphasize a certain stance and sway an audience | . Pronoun Usage | The practice of pronouns | “He is the chosen one!” | Create relatability, Pathos | . Selection of Detail | Chosen details to support a certain sentiment/ narrative. | “The animal snarled viciously with its lengthy teeth… ” | To create/ improve imagery that supports authors, stance. | . Juxtaposition | Having similar ideas/words next to each other to enhance contrast. | “When I am lazy, I procrastinate.” | Create a connection between two items | . Use of Absolutes | Extreme ideas with the use of words like never and all | “I will never drink milk again.” | To establish a stance and seem unwilling to change. | . Point of View | The perspective of the author | “He was scared of dogs because he never saw one.” | Helps audience understand the author&#39;s lens and beliefs | .",
            "url": "https://somaditya1.github.io/fastpages-csa/2022/08/28/apel-vocab.html",
            "relUrl": "/2022/08/28/apel-vocab.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Bash Installation Checks",
            "content": "Week 1 Assignment and Hacks: Innovation - Primitives . Canvas Requirements . Code.org . Lessons 1-5 Completed for OOP Units &lt;img width=“368” alt=“code.org lessons 1-5 OOP Unit” src=“https://user-images.githubusercontent.com/75715248/187126993-236b87a8-faa8-4670-b186-8456174fb01f.png”&gt; ### Productive Blogging #### Primitives Java Notebook | Demonstrates primitives use #### Bash Notebook | Demonstrates bash use and checks for installations and versions | Verifies kernels | Notes on bash and its uses (to be added) #### APEL Vocab Hack and Fun Quiz Hack | Created PBL and College Board Pages to organize learning PBL sorted by week to see progress and organize tools and material | College Board sorted by unit and content covered ## Others | . | Apel Vocab | .",
            "url": "https://somaditya1.github.io/fastpages-csa/jupyter/bash/2022/08/22/ticket.html",
            "relUrl": "/jupyter/bash/2022/08/22/ticket.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://somaditya1.github.io/fastpages-csa/jupyter/python/2020/02/20/test.html",
            "relUrl": "/jupyter/python/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post15": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://somaditya1.github.io/fastpages-csa/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://somaditya1.github.io/fastpages-csa/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
      ,"page7": {
          "title": "Vocab",
          "content": "Sequence - Code .",
          "url": "https://somaditya1.github.io/fastpages-csa/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
  

  
  

  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://somaditya1.github.io/fastpages-csa/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}